apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mongo
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      # initContainers:
      # - name: chmod-er
      #   image: busybox:latest
      #   command:
      #   - /bin/chown
      #   - -R
      #   - "999"  # or whatever the mongo UID is, use string "1000" not 1000 due to yaml
      #   - /data/db
      #   volumeMounts:
      #   - name: "mongo-data-dir"
      #     mountPath: "/data/db"
      containers:
      - image: 34.100.182.114/mongo
        name: mongo
        # securityContext:
        #   runAsUser: 0
        args: ["--dbpath","/data/db"]
        livenessProbe:
          exec:
            command:
              - mongo
              - --disableImplicitSessions
              - --eval
              - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
              - mongo
              - --disableImplicitSessions
              - --eval
              - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongo-creds
              key: username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-creds
              key: password
        volumeMounts:
        - name: "mongo-data-dir"
          mountPath: "/data"
      volumes:
      - name: "mongo-data-dir"
        persistentVolumeClaim:
          claimName: pvc-nfs-pv1